{"version":3,"sources":["Axios.jsx","Component/Carts/Carts.jsx","Asserts/image.png","Component/Charts./Charts.jsx","Datacenter.jsx","App.js","index.js"],"names":["baseURl","globaldata","country","a","changeableurl","axios","get","data","confirmed","deaths","recovered","lastUpdate","results","value","allcountrie","response","fetchDailydata","modifiedData","map","dailydata","total","date","reportData","console","log","Carts","props","Data","style","display","justifyContent","className","start","end","duration","separator","Date","toDateString","height","width","Charts","countrie","useState","setdailydata","useEffect","res","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barchart","options","legend","title","text","city","animation","easing","marginLeft","marginRight","fontFamily","href","borderBottom","marginBottom","Datacenter","global","setglobal","setcountrie","chartdata","setchartdata","fetchdata","globalApi","error","handlecountriename","respons","countries","src","Covid19","alt","name","onChange","e","target","datalist","i","role","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46480c0a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseURl = \"https://covid19.mathdro.id/api\"; // url for global covid-19 data\r\nexport const globaldata = async (country) => {\r\n  let changeableurl = baseURl;\r\n  // here i use condition if country having same data then the bellow code run and it change baseURl to changeableurl ; if country is empty or null then the use is same of baseURL ;\r\n  if (country) {\r\n    if (country === \"Globally\") {\r\n      changeableurl = baseURl;\r\n    } else { \r\n      changeableurl = `${baseURl}/countries/${country}`;\r\n    }\r\n  }\r\n  const {\r\n    data: { confirmed, deaths, recovered, lastUpdate },\r\n  } = await axios.get(changeableurl);\r\n\r\n  let results = {\r\n    confirmed: confirmed.value,\r\n    deaths: deaths.value,\r\n    recovered: recovered.value,\r\n    lastUpdate: lastUpdate,\r\n  };\r\n  return results;\r\n};\r\n// here i use all daily api / data\r\nconst countrielist = \"https://covid19.mathdro.id/api/countries/\";\r\nexport const allcountrie = async () => {\r\n  const response = await axios.get(countrielist);\r\n  return response;\r\n};\r\nexport const fetchDailydata = async () => {\r\n  try {\r\n    const { data } = await axios(`${baseURl}/daily`); // here i dynamicaly change the url and set infont daily ;\r\n    const modifiedData = data.map((dailydata) => ({\r\n      confirmed: dailydata.confirmed.total,\r\n      deaths: dailydata.deaths.total,\r\n      date: dailydata.reportData,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nfunction Carts(props) {\r\n  let { confirmed, deaths, recovered, lastUpdate } = props.Data; // All country data comes here !\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div className=\"row \">\r\n        <div className=\"card-deck\">\r\n          <div className=\"card col-sm-4 shadow-lg mb-5 bg-white rounded\">\r\n            <div className=\"card-body text-center \">\r\n              <h5 className=\"alert alert-light mb-0\">\r\n                <strong>confirmed case</strong>\r\n              </h5>\r\n              <h5>\r\n                <CountUp // countup syntax / code here\r\n                  start={0}\r\n                  end={confirmed}\r\n                  duration={2.75}\r\n                  separator=\",\"\r\n                />\r\n              </h5>\r\n              <small>\r\n                <em>{new Date(lastUpdate).toDateString()}</em>\r\n              </small>\r\n              <br />\r\n              <small>\r\n                <b>Number of confirmed cases of Covid-19</b>\r\n              </small>\r\n            </div>\r\n            <p\r\n              className=\"bg-success \"\r\n              style={{ height: \"10px\", width: \"100%\" }}\r\n            ></p>\r\n          </div>\r\n\r\n          <div className=\"card col-sm-4  shadow-lg  mb-5 bg-white rounded\">\r\n            <div className=\"card-body text-center\">\r\n              <h5 className=\"alert alert-light mb-0\">\r\n                <strong>recovered case</strong>\r\n              </h5>\r\n              <h5>\r\n                <CountUp\r\n                  start={0}\r\n                  end={recovered}\r\n                  duration={2.75}\r\n                  separator=\",\"\r\n                />\r\n              </h5>\r\n              <small>\r\n                <em>{new Date(lastUpdate).toDateString()}</em>\r\n              </small>\r\n              <br />\r\n              <small>\r\n                <b>Number of recovered cases of Covid-19 </b>\r\n              </small>\r\n            </div>\r\n            <p\r\n              className=\"bg-info\"\r\n              style={{ height: \"10px\", width: \"100%\" }}\r\n            ></p>\r\n          </div>\r\n\r\n          <div className=\"card col-sm-4  shadow-lg  mb-5 bg-white rounded\">\r\n            <div className=\"card-body text-center\">\r\n              <h5 className=\"alert alert-light mb-0\">\r\n                <strong>death case</strong>\r\n              </h5>\r\n              <h5>\r\n                <CountUp start={0} end={deaths} duration={2.75} separator=\",\" />\r\n              </h5>\r\n              <small>\r\n                <em>{new Date(lastUpdate).toDateString()}</em>\r\n              </small>\r\n              <br />\r\n              <small>\r\n                <b>Number of deaths cases of Covid-19 </b>\r\n              </small>\r\n            </div>\r\n            <p\r\n              className=\"bg-danger\"\r\n              style={{ height: \"10px\", width: \"100%\" }}\r\n            ></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Carts;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailydata } from \"../../Axios\"; //fetchDailydata function comes here\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nfunction Charts(props) {\r\n  let { confirmed, deaths, recovered } = props.countrie;\r\n  const [dailydata, setdailydata] = useState({});\r\n  useEffect(() => {\r\n    let res = async () => {\r\n      setdailydata(await fetchDailydata()); // here i call fetchDailydata() its a function that comes in Axios.jsx\r\n    }; \r\n    res();\r\n  }, []);\r\n  const lineChart = dailydata.length ? ( // here i use condition if length is 0 then the bellow code don't run or render\r\n    <Line // for line bar\r\n      data={{\r\n        labels: dailydata.map(({ confirmed }) => confirmed),\r\n        datasets: [\r\n          {\r\n            data: dailydata.map(({ confirmed }) => confirmed),\r\n            label: \"confirmed\",\r\n            borderColor: \"blue\",\r\n            backgroundColor: \"#1b87e5\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailydata.map(({ deaths }) => deaths),\r\n            label: \"deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  // for barchart\r\n  const barchart = (\r\n    <Bar //here i use bar\r\n      data={{\r\n        labels: [\"confirmed\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\"blue\", \"green\", \"red\"],\r\n            data: [confirmed, recovered, deaths],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${props.city}` },\r\n        animation: {\r\n          duration: 2000,\r\n          easing: \"easeInOutElastic\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <div style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n      {/* here i use a condition if props.city === globally thn linechart show on web browser else barchart show on web browser */}\r\n      {props.city === \"Globally\" ? lineChart : barchart}\r\n\r\n      <div className=\"mb-3\" style={{ fontFamily: \"monospace\" }}>\r\n        <hr />\r\n        <strong className=\"mt-3 mb-2\">\r\n          Copyright &copy; 2021 || created by Mr.Guddu 😎\r\n        </strong>\r\n        <p>\r\n          Email id &#9993;: <a href=\"#email\">jnana.ranjan408@gmail.com</a>{\" \"}\r\n          <br /> WhatsApp No.&#9990;: <a href=\"#phone\">+91 8114994487</a> <br />\r\n          <a href=\"https://www.linkedin.com/in/mr-gudu-%F0%9F%87%AE%F0%9F%87%B3-35121a1b1/\">\r\n            Linkedin ID{\" \"}\r\n          </a>\r\n        </p>\r\n        <em style={{ borderBottom: \"2px solid blue\", marginBottom: \"20px\" }}>\r\n          Thank you :) 💚\r\n        </em>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { globaldata } from \"./Axios\";\r\nimport \"./App.css\";\r\nimport { allcountrie } from \"./Axios\";\r\nimport Carts from \"./Component/Carts/Carts\";\r\n\r\nimport Covid19 from \"./Asserts/image.png\";\r\nimport Charts from \"./Component/Charts./Charts\";\r\n\r\nfunction Datacenter() {\r\n  const [global, setglobal] = useState({});\r\n  const [countrie, setcountrie] = useState([]);\r\n  const [chartdata, setchartdata] = useState(\"Globally\");\r\n  // global data comes here and i call the globaldata(); function ;\r\n  useEffect(() => {\r\n    try {\r\n      const globalApi = async () => {\r\n        // why i use async await because the globaldata(); containe a promise ; you can't use await without async function ;\r\n        const fetchdata = await globaldata();\r\n        setglobal(fetchdata);\r\n      };\r\n      globalApi();\r\n    } catch (error) {\r\n      console.log(`unable to fetch  data ${error}`);\r\n    }\r\n  }, [setglobal]);\r\n  const handlecountriename = async (country) => {\r\n    const fetchdata = await globaldata(country);\r\n    setchartdata(country);\r\n    setglobal(fetchdata);\r\n  };\r\n\r\n  //allcountrie Name data comes here  and here i call allcountrie() function ;\r\n  useEffect(() => {\r\n    try {\r\n      // why i use async await because the globaldata(); containe a promise ; you can't use await without async function ;\r\n      const data = async () => {\r\n        let respons = await allcountrie();\r\n        setcountrie(respons.data.countries);\r\n      };\r\n      data();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  if (!global.confirmed) {\r\n    // here i use condition is global.confirmed is not define then bellow the code run it show Loading.... in webpage ;\r\n    return (\r\n      <>\r\n        <span\r\n          className=\"spinner-border spinner-border-sm ml-5 mt-3\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        ></span>\r\n        Loading.......\r\n      </>\r\n    );\r\n  }\r\n  // if  global.confirmed is render or valid not undefine then bellow code run and show all thinks in webpage ;\r\n  return (\r\n    <div className=\"App\">\r\n      <img\r\n        src={Covid19}\r\n        alt=\"covid-19 logo\"\r\n        width=\"250px\"\r\n        className=\"mb-3 mt-3 \"\r\n      />\r\n      <br />\r\n      {/* here i use onChange event that access the code that i click in webpage and return the value in  handlecountriename function as a parameter */}\r\n      <select\r\n        name=\"\"\r\n        onChange={(e) => handlecountriename(e.target.value)}\r\n        className=\"selectbox shadow-lg  mb-3 bg-white \"\r\n      >\r\n        <option value=\"Globally\">Globally</option>\r\n        {countrie.map((datalist, i) => {\r\n          {\r\n            /**here i use map function that helps to render all data in webpage (All country name ) */\r\n          }\r\n          return (\r\n            <option key={i} name={datalist.name}>\r\n              {datalist.name}\r\n            </option>   \r\n          )\r\n        })}\r\n      </select>\r\n      <Carts Data={global} /> {/**Carts component calling here  */}\r\n      <Charts countrie={global} city={chartdata} />\r\n      {/**chaets component calling here  */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Datacenter;\r\n","import React from 'react'\n\nimport Datacenter from './Datacenter'\n\nfunction App() {\n  return (\n    <div>\n      <Datacenter/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}